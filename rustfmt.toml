# Rust formatting configuration for Buhera Virtual Processor Architecture
# Optimized for scientific computing and theoretical framework development

# Basic formatting
edition = "2021"
max_width = 120
hard_tabs = false
tab_spaces = 4

# Imports
imports_granularity = "Crate"
group_imports = "StdExternalCrate"
imports_layout = "Mixed"
reorder_imports = true
reorder_modules = true

# Functions and methods
fn_params_layout = "Tall"
fn_single_line = false
fn_call_width = 60
single_line_if_else_max_width = 50
force_explicit_abi = true

# Structures and enums
struct_lit_single_line = false
struct_field_align_threshold = 0
enum_discrim_align_threshold = 0
max_width_struct_variant = 0

# Arrays and slices
array_width = 60
chain_width = 60
single_line_if_else_max_width = 50

# Comments and documentation
comment_width = 100
doc_comment_code_block_width = 100
normalize_comments = true
normalize_doc_attributes = true
wrap_comments = true

# Whitespace
blank_lines_upper_bound = 2
blank_lines_lower_bound = 0
empty_item_single_line = true
newline_style = "Unix"
remove_nested_parens = true
use_small_heuristics = "Default"

# Control flow
control_brace_style = "AlwaysSameLine"
brace_style = "SameLineWhere"
indent_style = "Block"
where_single_line = false

# Expressions
binop_separator = "Front"
combine_control_expr = true
overflow_delimited_expr = false
spaces_around_ranges = false
match_block_trailing_comma = false
match_arm_blocks = true
force_multiline_blocks = false

# Strings and literals
format_strings = true
format_code_in_doc_comments = true
format_macro_matchers = true
format_macro_bodies = true

# Miscellaneous
version = "Two"
merge_derives = true
use_try_shorthand = true
use_field_init_shorthand = true
force_explicit_abi = true
condense_wildcard_suffixes = false
color = "Auto"
unstable_features = false

# Scientific computing specific
# Allow longer lines for mathematical expressions
max_width = 120
# Better formatting for complex type annotations
type_punctuation_density = "Wide"
# Preserve formatting in macro definitions for DSL-like syntax
format_macro_matchers = false
# Better alignment for mathematical operations
binop_separator = "Front"
# Keep long parameter lists readable
fn_params_layout = "Tall"
# Preserve structure in complex match expressions
match_arm_blocks = true
# Better formatting for builder patterns common in scientific code
method_call_style = "VisualIndent"

# Quantum computing and molecular simulation specific formatting
# These settings help with the complex mathematical expressions
# and domain-specific language constructs used in the project
space_before_colon = false
space_after_colon = true
spaces_around_ranges = true
struct_lit_single_line = false
array_width = 80
chain_width = 80

# Comments for theoretical framework documentation
comment_width = 120
doc_comment_code_block_width = 120
normalize_comments = true
wrap_comments = true

# Preserve formatting for complex type definitions
# common in quantum coherence and molecular substrate code
type_punctuation_density = "Wide"
where_single_line = false
single_line_if_else_max_width = 80

# Better formatting for error handling in scientific computations
combine_control_expr = true
match_block_trailing_comma = true
trailing_comma = "Vertical"

# Preserve readability in complex mathematical expressions
binop_separator = "Front"
overflow_delimited_expr = true
condense_wildcard_suffixes = true

# Formatting for procedural macros used in the project
format_macro_matchers = true
format_macro_bodies = true
skip_macro_invocations = []

# Preserve formatting for domain-specific language constructs
# used in BMD information catalysis and fuzzy logic
macro_use_prelude = true
merge_derives = true
reorder_impl_items = true

# Better formatting for async/await patterns in neural networks
async_fn_single_line = false
combine_control_expr = true
control_brace_style = "AlwaysSameLine"

# Preserve structure in complex generic bounds
# common in quantum coherence and molecular substrate APIs
type_punctuation_density = "Wide"
where_single_line = false
force_explicit_abi = true 